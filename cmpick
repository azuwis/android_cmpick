#!/bin/bash

CMPICK_DIR=`dirname $0`

function auto_merge()
{
    repo forall -v -p -c bash -c '
        number_branch=`ls -1 .git/refs/heads/ | grep -Fxv build | grep -v test | wc -l`
        if [ $number_branch -gt 1 ]; then
            branches=`ls -1 .git/refs/heads/ | grep -Fxv build |grep -v test`
            if [ -e .git/refs/heads/build ]; then
                git checkout build
                failed=0
                for i in $branches
                do
                    if ! git merge --ff-only $i; then
                        failed=1
                        break
                    fi
                done
                if [ failed == 0 ]; then
                    exit 0
                fi
                repo abandon build .
            fi
            repo start build .
            for i in $branches
            do
                git merge --no-edit --no-ff --rerere-autoupdate $i
                if [ -e .git/MERGE_MSG ]; then
                    git commit --file=.git/MERGE_MSG
                fi
            done

        fi
        '
}

function picks()
{
cat $CMPICK_DIR/$1 | while read url
do
    if echo $url | grep -q '^#' || [ x"$url" == x ]; then
        continue
    fi
    echo $url | grep -o '[0-9]*'
done
}

function push_all()
{
    repo forall -v -p -c bash -c '
        if [ -e .git/refs/heads/cm-10.1 ]; then
            if [ ! -e .git/refs/remotes/azuwis ]; then
                git remote add azuwis git://github.com/${REPO_PROJECT/CyanogenMod/azuwis}
            fi
            for i in `ls -1 .git/refs/heads/ | grep -Fxv build | grep -Fvv auto`
            do
                git push --force azuwis $i
            done
        fi
        '
}

case "$1" in
    -m)
        auto_merge
        ;;
    -p)
        push_all
        ;;
    auto)
        branches=$(picks "$1")
        echo "repopick -b" $branches
        ./build/tools/repopick.py -b $branches
        ;;
    *)
        branches=$(picks "$1")
        echo "repopick -s $1" $branches
        ./build/tools/repopick.py -s "$1" $branches
        ;;
esac
